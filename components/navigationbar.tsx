"use client";

import clsx from "clsx";
import { Link } from "react-scroll";
import { useState, useEffect } from "react";
import { LayoutGroup, motion } from "framer-motion";

const navItems = {
  home: {
    name: "home",
  },
  about: {
    name: "about",
  },
  projects: {
    name: "projects",
  },
  contact: {
    name: "contact",
  },
};

function Logo() {
  return (
    <Link aria-label="Antonio Karam" to="https://antoniokaram.com">
      <motion.svg
        xmlns="http://www.w3.org/2000/svg"
        width="50"
        zoomAndPan="magnify"
        viewBox="0 0 375 374.999991"
        height="50"
        preserveAspectRatio="xMidYMid meet"
        version="1.0"
        className="text-black dark:text-white"
      >
        <defs>
          <g />
        </defs>
      
        <motion.path
          initial={{ x: -250, y:250, opacity: 0 }}
          animate={{ x: 0, y:0, opacity: 1 }}
          transition={{
            duration: 1,
            type: 'spring',
            stiffness: 50,
          }}
          className="dark:fill-[#ffffff] fill-[#000000]"
          d="M 0.0078125 374.992188 L 304.386719 374.992188 C 343.386719 374.992188 375 343.378906 375 304.378906 L 375 0 L 70.621094 0 C 31.621094 0 0.0078125 31.613281 0.0078125 70.613281 Z M 0.0078125 374.992188 "
        />
        <g className="dark:fill-[#000000] fill-[#ffffff]">
          <g transform="translate(24.837894, 269.57073)">
            <g>
              <motion.path
                initial={{ x: -250, opacity: 0 }}
                animate={{ x: 0, opacity: 1 }}
                transition={{
                  duration: 1,
                  type: 'spring',
                  stiffness: 50,
                }}
               d="M 99.59375 -64.59375 C 97.425781 -72.125 94.960938 -80.09375 92.203125 -88.5 C 89.453125 -96.914062 86.695312 -105.253906 83.9375 -113.515625 C 81.1875 -121.785156 78.722656 -129.472656 76.546875 -136.578125 C 74.085938 -129.472656 71.40625 -121.785156 68.5 -113.515625 C 65.601562 -105.253906 62.738281 -96.914062 59.90625 -88.5 C 57.082031 -80.09375 54.363281 -72.125 51.75 -64.59375 Z M 166.359375 -3.484375 C 166.359375 -2.035156 165.921875 -1.054688 165.046875 -0.546875 C 164.179688 -0.0351562 163.023438 0.21875 161.578125 0.21875 C 157.804688 0.21875 154.035156 0.109375 150.265625 -0.109375 C 146.492188 -0.328125 142.726562 -0.4375 138.96875 -0.4375 C 133.3125 -0.4375 127.507812 -0.4375 121.5625 -0.4375 C 115.625 -0.4375 109.753906 -0.289062 103.953125 0 C 103.367188 0 102.785156 0.0351562 102.203125 0.109375 C 101.628906 0.179688 101.050781 0.21875 100.46875 0.21875 C 99.457031 0.21875 98.585938 -0.0664062 97.859375 -0.640625 C 97.140625 -1.222656 96.78125 -2.023438 96.78125 -3.046875 C 96.78125 -4.929688 97.429688 -6.085938 98.734375 -6.515625 C 100.035156 -6.953125 101.519531 -7.132812 103.1875 -7.0625 C 104.851562 -6.988281 106.265625 -6.953125 107.421875 -6.953125 C 112.066406 -6.953125 114.390625 -9.273438 114.390625 -13.921875 C 114.390625 -15.222656 113.914062 -17.613281 112.96875 -21.09375 C 112.03125 -24.570312 110.867188 -28.519531 109.484375 -32.9375 C 108.109375 -37.363281 106.734375 -41.675781 105.359375 -45.875 C 103.984375 -50.082031 102.863281 -53.566406 102 -56.328125 L 48.71875 -56.328125 C 47.695312 -53.710938 46.425781 -50.335938 44.90625 -46.203125 C 43.382812 -42.078125 41.828125 -37.800781 40.234375 -33.375 C 38.640625 -28.957031 37.296875 -24.972656 36.203125 -21.421875 C 35.117188 -17.867188 34.578125 -15.367188 34.578125 -13.921875 C 34.578125 -11.160156 35.265625 -9.304688 36.640625 -8.359375 C 38.015625 -7.421875 39.71875 -6.914062 41.75 -6.84375 C 43.78125 -6.769531 45.8125 -6.734375 47.84375 -6.734375 C 48.707031 -6.734375 49.429688 -6.226562 50.015625 -5.21875 C 50.597656 -4.207031 50.890625 -3.335938 50.890625 -2.609375 C 50.890625 -1.597656 50.488281 -0.835938 49.6875 -0.328125 C 48.894531 0.179688 48.0625 0.4375 47.1875 0.4375 C 42.550781 0.4375 37.835938 0.289062 33.046875 0 C 28.265625 -0.289062 23.554688 -0.4375 18.921875 -0.4375 C 16.597656 -0.4375 14.273438 -0.363281 11.953125 -0.21875 C 9.640625 -0.0703125 7.25 0 4.78125 0 C 3.769531 0 2.863281 -0.25 2.0625 -0.75 C 1.269531 -1.257812 0.875 -2.023438 0.875 -3.046875 C 0.875 -4.785156 1.488281 -5.90625 2.71875 -6.40625 C 3.945312 -6.914062 5.394531 -7.132812 7.0625 -7.0625 C 8.726562 -6.988281 10.070312 -6.953125 11.09375 -6.953125 C 12.832031 -6.953125 14.242188 -7.640625 15.328125 -9.015625 C 16.421875 -10.398438 17.253906 -11.816406 17.828125 -13.265625 C 26.378906 -34.578125 34.570312 -56.035156 42.40625 -77.640625 C 50.238281 -99.242188 57.847656 -120.914062 65.234375 -142.65625 C 65.816406 -144.25 66.539062 -146.421875 67.40625 -149.171875 C 68.28125 -151.929688 68.71875 -154.035156 68.71875 -155.484375 C 68.71875 -156.359375 68.535156 -157.117188 68.171875 -157.765625 C 67.804688 -158.421875 67.625 -159.113281 67.625 -159.84375 C 67.625 -160.707031 68.207031 -161.140625 69.375 -161.140625 C 70.675781 -161.578125 72.050781 -161.832031 73.5 -161.90625 C 74.945312 -161.976562 76.398438 -162.085938 77.859375 -162.234375 C 81.046875 -162.671875 84.195312 -163.101562 87.3125 -163.53125 C 90.425781 -163.96875 93.582031 -164.40625 96.78125 -164.84375 L 149.1875 -15 C 150.488281 -11.226562 152.226562 -8.976562 154.40625 -8.25 C 156.582031 -7.53125 158.609375 -7.242188 160.484375 -7.390625 C 162.085938 -7.390625 163.46875 -7.242188 164.625 -6.953125 C 165.78125 -6.671875 166.359375 -5.515625 166.359375 -3.484375 Z M 166.359375 -3.484375 " />
            </g>
          </g>
        </g>
        <g className="dark:fill-[#000000] fill-[#ffffff]" >
          <g transform="translate(193.153587, 269.57073)">
            <g>
              <motion.path
               initial={{ x: -250, opacity: 0 }}
               animate={{ x: 0, opacity: 1 }}
               transition={{
                 duration: 1,
                 type: 'spring',
                 stiffness: 50,
               }}
               d="M 156.140625 -3.046875 C 156.140625 -1.890625 155.664062 -1.09375 154.71875 -0.65625 C 153.78125 -0.21875 152.804688 0 151.796875 0 C 149.035156 0 146.132812 0.109375 143.09375 0.328125 C 140.050781 0.546875 137.078125 0.65625 134.171875 0.65625 C 131.859375 0.65625 129.539062 0.617188 127.21875 0.546875 C 124.894531 0.472656 122.503906 0.4375 120.046875 0.4375 C 115.984375 0.4375 112.789062 -0.285156 110.46875 -1.734375 C 108.15625 -3.191406 105.835938 -5.515625 103.515625 -8.703125 C 95.535156 -20.296875 87.453125 -31.960938 79.265625 -43.703125 C 71.078125 -55.453125 62.992188 -67.050781 55.015625 -78.5 L 53.9375 -77.640625 C 54.082031 -66.910156 54.15625 -56.144531 54.15625 -45.34375 C 54.15625 -34.539062 54.15625 -23.773438 54.15625 -13.046875 C 54.15625 -12.035156 54.257812 -10.835938 54.46875 -9.453125 C 54.6875 -8.078125 55.523438 -7.390625 56.984375 -7.390625 C 58.859375 -7.390625 60.738281 -7.425781 62.625 -7.5 C 64.507812 -7.570312 66.394531 -7.609375 68.28125 -7.609375 C 69.445312 -7.609375 70.351562 -7.207031 71 -6.40625 C 71.65625 -5.613281 71.984375 -4.640625 71.984375 -3.484375 C 71.984375 -2.609375 71.617188 -1.695312 70.890625 -0.75 C 70.171875 0.1875 69.300781 0.65625 68.28125 0.65625 C 66.25 0.65625 64.21875 0.582031 62.1875 0.4375 C 60.164062 0.289062 58.140625 0.144531 56.109375 0 C 53.203125 -0.144531 50.300781 -0.253906 47.40625 -0.328125 C 44.507812 -0.398438 41.609375 -0.4375 38.703125 -0.4375 C 35.515625 -0.4375 32.363281 -0.4375 29.25 -0.4375 C 26.132812 -0.4375 22.984375 -0.289062 19.796875 0 C 18.191406 0.144531 16.445312 0.289062 14.5625 0.4375 C 12.6875 0.582031 10.878906 0.65625 9.140625 0.65625 C 5.941406 0.65625 4.34375 -0.867188 4.34375 -3.921875 C 4.34375 -5.367188 4.847656 -6.34375 5.859375 -6.84375 C 6.878906 -7.351562 7.972656 -7.609375 9.140625 -7.609375 C 10.585938 -7.609375 12.109375 -7.570312 13.703125 -7.5 C 15.296875 -7.425781 16.816406 -7.390625 18.265625 -7.390625 C 20.878906 -7.390625 22.363281 -8.515625 22.71875 -10.765625 C 23.082031 -13.015625 23.265625 -15.082031 23.265625 -16.96875 L 23.265625 -141.140625 C 23.265625 -142.441406 23.191406 -144 23.046875 -145.8125 C 22.898438 -147.625 22.5 -149.179688 21.84375 -150.484375 C 21.195312 -151.796875 20.003906 -152.453125 18.265625 -152.453125 L 8.484375 -152.453125 C 7.460938 -152.453125 6.515625 -152.703125 5.640625 -153.203125 C 4.773438 -153.710938 4.34375 -154.472656 4.34375 -155.484375 C 4.34375 -158.390625 5.578125 -159.84375 8.046875 -159.84375 C 9.785156 -159.84375 11.773438 -159.804688 14.015625 -159.734375 C 16.265625 -159.660156 18.191406 -159.550781 19.796875 -159.40625 C 22.691406 -159.257812 26.203125 -159.1875 30.328125 -159.1875 C 34.460938 -159.1875 38.5625 -159.1875 42.625 -159.1875 C 44.800781 -159.1875 46.898438 -159.1875 48.921875 -159.1875 C 50.953125 -159.1875 53.054688 -159.257812 55.234375 -159.40625 C 57.265625 -159.550781 59.472656 -159.660156 61.859375 -159.734375 C 64.253906 -159.804688 66.394531 -159.84375 68.28125 -159.84375 C 69.300781 -159.84375 70.132812 -159.441406 70.78125 -158.640625 C 71.4375 -157.847656 71.765625 -157.015625 71.765625 -156.140625 C 71.765625 -155.273438 71.398438 -154.441406 70.671875 -153.640625 C 69.953125 -152.847656 69.15625 -152.453125 68.28125 -152.453125 L 57.625 -152.453125 C 56.175781 -152.453125 55.234375 -151.832031 54.796875 -150.59375 C 54.367188 -149.363281 54.15625 -148.238281 54.15625 -147.21875 C 54.15625 -142.144531 54.117188 -137.109375 54.046875 -132.109375 C 53.972656 -127.109375 53.9375 -122.070312 53.9375 -117 L 53.9375 -88.296875 C 59.875 -93.953125 65.707031 -99.710938 71.4375 -105.578125 C 77.164062 -111.453125 82.785156 -117.289062 88.296875 -123.09375 C 90.328125 -125.113281 92.679688 -127.644531 95.359375 -130.6875 C 98.046875 -133.738281 100.65625 -136.785156 103.1875 -139.828125 C 105.726562 -142.878906 107.722656 -145.488281 109.171875 -147.65625 C 109.609375 -148.238281 110.441406 -149.472656 111.671875 -151.359375 C 112.898438 -153.242188 113.804688 -154.691406 114.390625 -155.703125 C 115.835938 -158.460938 117.429688 -159.84375 119.171875 -159.84375 C 121.203125 -159.84375 122.578125 -159.84375 123.296875 -159.84375 C 124.023438 -159.84375 124.75 -159.84375 125.46875 -159.84375 C 126.195312 -159.84375 127.578125 -159.84375 129.609375 -159.84375 C 132.941406 -159.84375 135.441406 -159.84375 137.109375 -159.84375 C 138.773438 -159.84375 141.207031 -159.84375 144.40625 -159.84375 C 147.15625 -159.84375 148.53125 -158.679688 148.53125 -156.359375 C 148.53125 -154.035156 147.875 -152.726562 146.5625 -152.4375 C 145.257812 -152.15625 143.597656 -152.015625 141.578125 -152.015625 C 138.960938 -151.867188 136.3125 -151.140625 133.625 -149.828125 C 130.945312 -148.523438 128.738281 -147.003906 127 -145.265625 L 76.546875 -95.90625 C 86.691406 -81.84375 97.164062 -67.78125 107.96875 -53.71875 C 118.769531 -39.65625 129.460938 -25.734375 140.046875 -11.953125 C 141.210938 -10.503906 142.695312 -9.378906 144.5 -8.578125 C 146.3125 -7.785156 148.160156 -7.242188 150.046875 -6.953125 C 151.210938 -6.804688 152.519531 -6.515625 153.96875 -6.078125 C 155.414062 -5.648438 156.140625 -4.640625 156.140625 -3.046875 Z M 156.140625 -3.046875 " />
            </g>
          </g>
        </g>
      </motion.svg>
    </Link>
  );
}

export default function Navbar() {
  const [active, setActive] = useState("home");

  const handleSetActive = (id: any) => {
    setActive(id);
  };

  const handleScroll = () => {
    const sections = document.querySelectorAll("section");

    let currentSection = "";

    sections.forEach((section) => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.clientHeight;

      if (window.scrollY >= sectionTop - sectionHeight / 100) {
        currentSection = section.getAttribute("id") ?? "";
      }
    });

    setActive(currentSection);
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  return (
    <aside className="md:w-[150px] md:flex-shrink-0 -mx-4 md:mx-0 md:px-0 font-serif ">
      <div className="lg:sticky lg:top-20">
        <div className="ml-3 md:ml-2 mb-2 px-4 md:px-0 md:mb-8 space-y-10 flex flex-col md:flex-row justify-start">
          <Logo />
        </div>
        
        <LayoutGroup>
          <nav
            className="flex flex-row md:flex-col items-start relative px-4 md:px-0 pb-0 fade md:overflow-auto scroll-pr-6 md:relative"
            id="nav"
          >
            <div className="flex flex-row md:flex-col space-x-0 pr-10 mb-2 mt-2 md:mt-0">
              {Object.entries(navItems).map(([path, { name }]) => {
                return (
                  <Link
                    to={path}
                    key={path}
                    offset={path === "home" ? -500 : 0}
                    onClick={() => {
                      handleSetActive(path);
                    }}
                    className={clsx(
                      "transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle",
                      {
                        "text-neutral-500": !(active === path),
                        "font-regular": active === path,
                        active: active == path,
                      }
                    )}
                  >
                    <span className="relative py-[5px] px-[10px]">
                      {name}
                      {active === path ? (
                        <motion.div
                          className="absolute inset-0 bg-neutral-100 dark:bg-neutral-800 rounded-md z-[-1]"
                          layoutId="sidebar"
                          transition={{
                            type: "spring",
                            stiffness: 350,
                            damping: 30,
                          }}
                        />
                      ) : null}
                    </span>
                  </Link>
                );
              })}
            </div>
          </nav>
        </LayoutGroup>
      </div>
    </aside>
  );
}
